<?php
namespace Deployer;

require 'recipe/sulu.php';

/**
 * Recipes
 */

require 'recipe/sulu.php';
require 'vendor/deployer/recipes/recipe/yarn.php';

/**
 * Configuration
 */

// Project repository
set('repository', 'git@github.com:OlgaLevanova/tipunursery.nz.git');

// [Optional] Allocate tty for git clone. Default value is false.
//set('git_tty', true);

// Shared files/dirs between deploys
//
// NOTE: The recipe/symfony4.php adds both ".env.local.php" & ".env.local"
// Empty files are automatically generated if they do not exist.
// To boost performance, Symfony will ignore other ".env" files if
// ".env.local.php" exists and returns a config array.
//
// Should you update the ".env.local" and have the ".env.local.php" configured,
// it can be manually regenerated by running:
//
//     composer dump-env prod
//
// See: https://symfony.com/doc/4.4/configuration.html#configuring-environment-variables-in-production
add('shared_files', []);
add('shared_dirs', []);

// Writable dirs by web server
// This needs to be 'chown' if we have a NFS file system anywhere in the deploy path
set('writable_mode', 'chown');
add('writable_dirs', []);
set('allow_anonymous_stats', false);

// Releases
set('keep_releases', 2);

// Hosts
import(__DIR__ . '/etc/deployer/hosts.yaml');

// Override: bin/composer
// Explicitly install composer version 1 for use.
set('bin/composer', function () {
    run("cd {{release_path}} && curl -sS https://getcomposer.org/installer |  {{bin/php}} -- --2");
    $composer = '{{bin/php}} {{release_path}}/composer.phar';

    return $composer;
});

/**
 * Tasks
 */

// Run "yarn install" within the release path.
task('yarn:install', function () {
	within('{{release_path}}', function () {
		run('{{bin/yarn}} install');
	});
});

// Run "yarn build" within the release path.
task('yarn:build', function () {
    within('{{release_path}}', function () {
        run('{{bin/yarn}} build');
    });
});

desc('Build frontend assets');
task('frontend:build', [
    'yarn:install',
    'yarn:build'
]);

desc('Build admin assets');
task('admin:build', function () {
	within('{{release_or_current_path}}', function () {
		run('{{bin/php}} {{release_or_current_path}}/bin/console sulu:admin:update-build');
	});
});

task('reload:php-fpm', function () {
	run('sudo /bin/systemctl restart php8.0-fpm');
});

/**
 * Task Hooks
 */

// [Optional] if deploy fails automatically unlock.
after('deploy:failed', 'deploy:unlock');

// Build admin/frontend after dependencies have been installed.
after('deploy:update_code', 'frontend:build');
after('deploy:vendors', 'admin:build');

// Migrate database before symlink new release.
//before('deploy:symlink', 'database:migrate');

// Preload config after database migrations
//after('database:migrate', 'satellite:config:preload');

// Restart FPM
after('deploy', 'reload:php-fpm');
